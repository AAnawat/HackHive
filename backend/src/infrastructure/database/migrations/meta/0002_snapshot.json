{
  "id": "dc8b4529-1ca7-4209-b5be-7999ca638ef5",
  "prevId": "53b8e6b7-2185-41b0-8a43-b504f799b6da",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.categories": {
      "name": "categories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "categories_category_unique": {
          "name": "categories_category_unique",
          "nullsNotDistinct": false,
          "columns": [
            "category"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.flags": {
      "name": "flags",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "problem_id": {
          "name": "problem_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "flag_value": {
          "name": "flag_value",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "is_case_sensitive": {
          "name": "is_case_sensitive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "flags_problem_id_problems_id_fk": {
          "name": "flags_problem_id_problems_id_fk",
          "tableFrom": "flags",
          "tableTo": "problems",
          "columnsFrom": [
            "problem_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.hints": {
      "name": "hints",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "problem_id": {
          "name": "problem_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "hint": {
          "name": "hint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "hints_problem_id_problems_id_fk": {
          "name": "hints_problem_id_problems_id_fk",
          "tableFrom": "hints",
          "tableTo": "problems",
          "columnsFrom": [
            "problem_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.problems": {
      "name": "problems",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "problem": {
          "name": "problem",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "difficulty": {
          "name": "difficulty",
          "type": "difficulty",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 500
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "problems_problem_unique": {
          "name": "problems_problem_unique",
          "nullsNotDistinct": false,
          "columns": [
            "problem"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.problemsToCategories": {
      "name": "problemsToCategories",
      "schema": "",
      "columns": {
        "problem_id": {
          "name": "problem_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "category_id": {
          "name": "category_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "problemsToCategories_problem_id_problems_id_fk": {
          "name": "problemsToCategories_problem_id_problems_id_fk",
          "tableFrom": "problemsToCategories",
          "tableTo": "problems",
          "columnsFrom": [
            "problem_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "problemsToCategories_category_id_categories_id_fk": {
          "name": "problemsToCategories_category_id_categories_id_fk",
          "tableFrom": "problemsToCategories",
          "tableTo": "categories",
          "columnsFrom": [
            "category_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "problemsToCategories_problem_id_category_id_pk": {
          "name": "problemsToCategories_problem_id_category_id_pk",
          "columns": [
            "problem_id",
            "category_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.solvedRecords": {
      "name": "solvedRecords",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "problem_id": {
          "name": "problem_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "solve_score": {
          "name": "solve_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "solved_user_problem_idx": {
          "name": "solved_user_problem_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "problem_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "solvedRecords_user_id_users_id_fk": {
          "name": "solvedRecords_user_id_users_id_fk",
          "tableFrom": "solvedRecords",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "solvedRecords_problem_id_problems_id_fk": {
          "name": "solvedRecords_problem_id_problems_id_fk",
          "tableFrom": "solvedRecords",
          "tableTo": "problems",
          "columnsFrom": [
            "problem_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "gmail": {
          "name": "gmail",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "password": {
          "name": "password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "pfp_path": {
          "name": "pfp_path",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true,
          "default": "'https://hackhive.s3.us-east-1.amazonaws.com/profile-pictures/default.png'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_gmail_unique": {
          "name": "users_gmail_unique",
          "nullsNotDistinct": false,
          "columns": [
            "gmail"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.usersLikeProblems": {
      "name": "usersLikeProblems",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "solve_id": {
          "name": "solve_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "is_like": {
          "name": "is_like",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "usersLikeProblems_solve_id_solvedRecords_id_fk": {
          "name": "usersLikeProblems_solve_id_solvedRecords_id_fk",
          "tableFrom": "usersLikeProblems",
          "tableTo": "solvedRecords",
          "columnsFrom": [
            "solve_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.difficulty": {
      "name": "difficulty",
      "schema": "public",
      "values": [
        "Easy",
        "Medium",
        "Hard"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.problemsWithLikes": {
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "problem": {
          "name": "problem",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "difficulty": {
          "name": "difficulty",
          "type": "difficulty",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 500
        }
      },
      "definition": "select \"problems\".\"id\", \"problems\".\"problem\", \"problems\".\"description\", \"problems\".\"difficulty\", \"problems\".\"score\", COUNT(\"usersLikeProblems\".\"is_like\" = true OR NULL)::float / NULLIF(COUNT(\"usersLikeProblems\".\"id\"), 0) * 100 as \"likes\" from \"problems\" left join \"solvedRecords\" on \"problems\".\"id\" = \"solvedRecords\".\"problem_id\" left join \"usersLikeProblems\" on \"solvedRecords\".\"id\" = \"usersLikeProblems\".\"solve_id\" group by \"problems\".\"id\"",
      "name": "problemsWithLikes",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}